;; Analyzed by ClojureScript 0.0-3211
{:use-macros nil, :excludes #{}, :name weasel.repl, :imports nil, :requires {goog.dom goog.dom, brepl clojure.browser.repl, clojure.browser.repl clojure.browser.repl, weasel.impls.websocket weasel.impls.websocket, ws weasel.impls.websocket, gdom goog.dom, net clojure.browser.net, clojure.browser.net clojure.browser.net, event clojure.browser.event, cljs.reader cljs.reader, reader cljs.reader, clojure.browser.event clojure.browser.event}, :uses {event-types clojure.browser.event, read-string cljs.reader}, :defs {connect {:protocol-inline nil, :meta {:top-fn {:variadic true, :max-fixed-arity 1, :method-params [(repl-server-url {:keys [verbose on-open on-error on-close print], :or {verbose true, print :repl}})], :arglists [[repl-server-url & {:keys [verbose on-open on-error on-close print], :or {verbose true, print :repl}}]], :arglists-meta (nil)}, :arglists (quote ([repl-server-url & {:keys [verbose on-open on-error on-close print], :or {verbose true, print :repl}}])), :end-column 14, :end-line 56, :column 7, :line 56, :file "/Users/alex/projects/goon-squad/resources/public/js/compiled/out/weasel/repl.cljs"}, :name weasel.repl/connect, :variadic true, :file "resources/public/js/compiled/out/weasel/repl.cljs", :end-column 14, :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(repl-server-url {:keys [verbose on-open on-error on-close print], :or {verbose true, print :repl}})], :arglists [[repl-server-url & {:keys [verbose on-open on-error on-close print], :or {verbose true, print :repl}}]], :arglists-meta (nil)}, :method-params [(repl-server-url {:keys [verbose on-open on-error on-close print], :or {verbose true, print :repl}})], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 56, :end-line 56, :max-fixed-arity 1, :fn-var true, :arglists [[repl-server-url & {:keys [verbose on-open on-error on-close print], :or {verbose true, print :repl}}]], :test true}, print-fns {:meta {:end-column 15, :end-line 49, :column 6, :line 49, :file "/Users/alex/projects/goon-squad/resources/public/js/compiled/out/weasel/repl.cljs"}, :file "resources/public/js/compiled/out/weasel/repl.cljs", :line 49, :column 1, :end-line 49, :end-column 15, :test true, :name weasel.repl/print-fns}, console-print {:protocol-inline nil, :meta {:top-fn {:variadic true, :max-fixed-arity 0, :method-params [(args)], :arglists [[& args]], :arglists-meta (nil)}, :arglists (quote ([& args])), :end-column 20, :end-line 46, :column 7, :line 46, :file "/Users/alex/projects/goon-squad/resources/public/js/compiled/out/weasel/repl.cljs"}, :name weasel.repl/console-print, :variadic true, :file "resources/public/js/compiled/out/weasel/repl.cljs", :end-column 20, :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(args)], :arglists [[& args]], :arglists-meta (nil)}, :method-params [(args)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 46, :end-line 46, :max-fixed-arity 0, :fn-var true, :arglists [[& args]], :test true}, repl-print {:protocol-inline nil, :meta {:top-fn {:variadic true, :max-fixed-arity 0, :method-params [(args)], :arglists [[& args]], :arglists-meta (nil)}, :arglists (quote ([& args])), :end-column 17, :end-line 41, :column 7, :line 41, :file "/Users/alex/projects/goon-squad/resources/public/js/compiled/out/weasel/repl.cljs"}, :name weasel.repl/repl-print, :variadic true, :file "resources/public/js/compiled/out/weasel/repl.cljs", :end-column 17, :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(args)], :arglists [[& args]], :arglists-meta (nil)}, :method-params [(args)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 41, :end-line 41, :max-fixed-arity 0, :fn-var true, :arglists [[& args]], :test true}, process-message {:meta {:end-column 26, :end-line 16, :column 11, :line 16, :file "/Users/alex/projects/goon-squad/resources/public/js/compiled/out/weasel/repl.cljs"}, :file "resources/public/js/compiled/out/weasel/repl.cljs", :line 16, :column 1, :end-line 16, :end-column 26, :test true, :name weasel.repl/process-message}, alive? {:protocol-inline nil, :meta {:arglists (quote ([])), :end-column 13, :end-line 11, :column 7, :line 11, :file "/Users/alex/projects/goon-squad/resources/public/js/compiled/out/weasel/repl.cljs"}, :name weasel.repl/alive?, :variadic false, :file "resources/public/js/compiled/out/weasel/repl.cljs", :end-column 13, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 11, :end-line 11, :max-fixed-arity 0, :fn-var true, :arglists (quote ([])), :test true}, ws-connection {:meta {:private true, :end-column 29, :end-line 9, :column 16, :line 9, :file "/Users/alex/projects/goon-squad/resources/public/js/compiled/out/weasel/repl.cljs"}, :file "resources/public/js/compiled/out/weasel/repl.cljs", :line 9, :column 1, :end-line 9, :end-column 29, :private true, :test true, :name weasel.repl/ws-connection}}, :require-macros nil, :cljs.analyzer/constants {:order [:hierarchy :op :default :error :type :eval-js :code :value :result :status :stacktrace :exception :else :success :print :repl :console :on-close :on-error :on-open :verbose :opened :ready :message :closed], :seen #{:closed :ready :eval-js :else :on-close :default :value :type :verbose :opened :op :print :success :status :result :repl :code :stacktrace :error :exception :console :on-error :hierarchy :on-open :message}}, :doc nil}